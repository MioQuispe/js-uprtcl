(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{243:function(t,s,e){"use strict";e.r(s);var n=e(28),a=Object(n.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"graphql-schemas-and-resolvers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#graphql-schemas-and-resolvers"}},[t._v("#")]),t._v(" GraphQl Schemas and Resolvers")]),t._v(" "),e("p",[t._v("The "),e("a",{attrs:{href:"https://github.com/uprtcl/js-uprtcl/blob/develop/packages/graphql/src/apollo-client.module.ts",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("ApolloClientModule")]),e("OutboundLink")],1),t._v(" is a "),e("strong",[t._v("very basic module")]),t._v(" in respect to all the infrastructure. This is because the "),e("strong",[e("RouterLink",{attrs:{to:"/guides/cortex/what-is-cortex.html#vision"}},[t._v("vision of cortex")]),t._v(" can benefit largely of leaning on "),e("code",[t._v("GraphQl")])],1),t._v(", as a way to express queries and navigate linked graph of objects.")]),t._v(" "),e("h2",{attrs:{id:"extending-the-base-schema"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#extending-the-base-schema"}},[t._v("#")]),t._v(" Extending the base schema")]),t._v(" "),e("p",[e("strong",[t._v("Each "),e("code",[t._v("MicroModule")]),t._v(" can extend the "),e("a",{attrs:{href:"https://github.com/uprtcl/js-uprtcl/blob/develop/packages/graphql/src/base-schema.ts",target:"_blank",rel:"noopener noreferrer"}},[t._v("base GraphQl schema"),e("OutboundLink")],1)]),t._v(", declaring new types and mutations, and defining its own resolvers.")]),t._v(" "),e("p",[t._v("This enables various methods of interoperability. For example, "),e("strong",[t._v("modules can query the entire graph of data and entities")]),t._v(" that all its dependencies have registered.")]),t._v(" "),e("p",[t._v("To extend the base schema, follow this steps:")]),t._v(" "),e("ol",[e("li",[t._v("Define your GraphQl type definitions and resolvers for those types:")])]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" gql "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'graphl-tag'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" TextProvider "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../text-provider'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" TextModule "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../text-module'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" typeDefs "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gql"),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\n  type Text implements Entity {\n    id: ID!\n\n    text: String!\n    reference: Entity! @discover\n\n    _context: EntityContext!\n  }\n\n  extend type Mutation {\n    setHomeText(homeText: String!): Text! @discover\n  }\n")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" resolvers "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Mutation"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHomeText")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("_"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" homeText "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" container "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Here we have access to the container, and we can get any registered dependencies")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" provider"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" TextProvider "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" container"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TextModule"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bindings"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TextProvider"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" hash "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" provider"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHomeText")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("homeText"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" hash"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("Some comments:")]),t._v(" "),e("ul",[e("li",[t._v("For every type of content-addressable entity that you want to register, create a GraphQl type that implements the "),e("code",[t._v("Entity")]),t._v(" type:")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("interface Entity {\n  id: ID!\n\n  _context: EntityContext!\n}\n")])])]),e("p",[t._v("You don't need to implement resolvers for either "),e("code",[t._v("id")]),t._v(" or "),e("code",[t._v("_context")]),t._v(", as they are set by the "),e("code",[t._v("CortexModule")]),t._v(".")]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[e("strong",[t._v("Create and load a "),e("code",[t._v("GraphQlSchemaModule")])]),t._v(" with your type definitions and resolvers:")])]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" GraphQlSchemaModule "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@uprtcl/graphql'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" typeDefs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" resolvers "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./graphql'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" schemaModule "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GraphQlSchemaModule")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("typeDefs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" resolvers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... MicroOrchestrator initialization and loading of base modules")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" orchestrator"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadModule")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("schemaModule"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h2",{attrs:{id:"the-discover-directive"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#the-discover-directive"}},[t._v("#")]),t._v(" The "),e("code",[t._v("@discover")]),t._v(" directive")]),t._v(" "),e("p",[t._v("The "),e("RouterLink",{attrs:{to:"/modules/packages/uprtcl-multiplatform.html"}},[e("code",[t._v("@uprtcl/multiplatform")])]),t._v(" registers the "),e("a",{attrs:{href:"https://github.com/uprtcl/js-uprtcl/blob/develop/packages/multiplatform/src/graphql/directives/discover-directive.ts",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("@discover")]),e("OutboundLink")],1),t._v(" directive.")],1),t._v(" "),e("p",[t._v("This directive, when declared in a field inside a GraphQl schema, allows for references to content-addressable to be resolved, and for GraphQl queries to traverse the linked graph of content-addressable entities, between different platforms.")]),t._v(" "),e("p",[t._v("For example, in the schema we defined earlier:")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" typeDefs "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gql"),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\n  type Text implements Entity {\n    id: ID!\n\n    text: String!\n    reference: Entity! @discover\n\n    _context: EntityContext!\n  }\n\n  extend type Mutation {\n    setHomeText(homeText: String!): Text! @discover\n  }\n")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("The "),e("code",[t._v("@discover")]),t._v(" directive allows for "),e("code",[t._v("GraphQl")]),t._v(" queries to traverse the graph of linked entities, by getting the hash of the reference, fetching the referenced entity and retrieving all its contents.")]),t._v(" "),e("p",[t._v("To make the "),e("code",[t._v("@discover")]),t._v(" directive work, it requires you to "),e("strong",[t._v("provide the hash of the referenced object")]),t._v(":")]),t._v(" "),e("ul",[e("li",[t._v("If the field of the entity already contains the hash of the object, "),e("strong",[t._v("do nothing")]),t._v(".")]),t._v(" "),e("li",[t._v("If the field of the entity does not contain the hash of the object, "),e("strong",[t._v("create a custom resolver to return the hash of the referenced entity")]),t._v(".")])]),t._v(" "),e("p",[t._v("All this enables elements to make queries of this form:")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" LitElement"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" html "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lit-element'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" moduleConnect "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@uprtcl/micro-orchestrator'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ApolloClientModule "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@uprtcl/graphql'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TextLens")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("moduleConnect")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LitElement"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  apolloClient"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ApolloClient"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  @"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("property")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  entityId"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("firstUpdated")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apolloClient "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("request")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ApolloClientModule"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bindings"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Client"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadData")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadData")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apolloClient"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("query")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      query"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" gql"),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\n      {\n        entity(hash: ")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("entityId"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v(") {\n          id\n          \n          ... on Text {\n            text\n            reference {\n              id\n\n              ... on Text {\n                text\n                reference {\n                  id\n\n                  ... on Text {\n                    text\n                  }\n                }\n\n              }\n            }\n\n          }\n        }\n      }\n      ")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastText "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("entity"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reference"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reference"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... render the retrieved data")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("This is, of course, provided that all the "),e("code",[t._v("reference")]),t._v(" fields inside all "),e("code",[t._v("Text")]),t._v(" object we retrieve contain hashes that point to other "),e("code",[t._v("Text")]),t._v(" entities. But there is no restriction, in the sense that any "),e("code",[t._v("reference")]),t._v(" field could contain a hash that would point to any other kind of "),e("code",[t._v("Entity")]),t._v(".")])])}),[],!1,null,null,null);s.default=a.exports}}]);